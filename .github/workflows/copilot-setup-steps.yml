name: Copilot Coding Agent Setup

on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Read permission required to be able to clone the repository in setup
    permissions:
      contents: read

    services:
      postgres:
        image: postgres:17-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: may_is_bike_month_development
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        # needed because the postgres container does not provide a healthcheck
        # tmpfs makes DB faster by using RAM
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    env:
      PARALLEL_TEST_FIRST_IS_1: true
      # Chrome configuration to prevent external connections and firewall violations
      CHROME_DEVEL_SANDBOX: /usr/bin/google-chrome-sandbox
      CHROMIUM_FLAGS: "--disable-sync --disable-extensions --disable-logging --disable-background-networking --disable-component-update --disable-client-side-phishing-detection --disable-default-apps --disable-translate --disable-background-timer-throttling --disable-backgrounding-occluded-windows --disable-features=TranslateUI --disable-ipc-flooding-protection --no-first-run --disable-gpu --disable-dev-shm-usage --disable-setuid-sandbox --disable-web-security --no-zygote --single-process --disable-features=VizDisplayCompositor --disable-breakpad --disable-crash-reporter --disable-crash-dump --disable-notifications --mute-audio --no-default-browser-check --no-pings --disable-domain-reliability --disable-features=AutofillServerCommunication --disable-site-isolation-trials --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --enable-automation --headless=new --no-service-autorun --password-store=basic --test-type=webdriver --use-mock-keychain --disable-renderer-backgrounding --disable-background-timer-throttling --disable-backgrounding-occluded-windows --disable-features=Translate --no-sandbox"
    steps:
      - name: Get CPU cores
        id: cpu-info
        run: |
          echo "cpu-cores=$(nproc)" >> $GITHUB_OUTPUT
          echo "cpu-cores=$(nproc)"
      # install system dependencies
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: google-chrome-stable curl gettext libvips
          version: 1.0
      - name: Checkout code
        uses: actions/checkout@v5
      # Install Ruby dependencies
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundle install

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
      
      # Copy .env so that ENV vars are in place (even if they're dummy values)
      - name: Copy .env.template
        run: cp .env.template .env
      
      - name: Set up database
        run: |
          bin/rails db:create db:schema:load db:migrate db:seed
          bin/rake parallel:setup

      # Configure Chrome for testing to prevent firewall violations
      - name: Configure Chrome for CI testing
        run: |
          # Create Chrome config directory
          mkdir -p ~/.config/google-chrome/
          # Create policy file to disable external connections
          cat > ~/.config/google-chrome/policies.json << 'EOF'
          {
            "BackgroundModeEnabled": false,
            "ComponentUpdatesEnabled": false,
            "DefaultSearchProviderEnabled": false,
            "MetricsReportingEnabled": false,
            "SafeBrowsingEnabled": false,
            "SigninAllowed": false,
            "SyncDisabled": true,
            "UserFeedbackAllowed": false,
            "AutofillServerWhitelist": [],
            "ExtensionInstallBlacklist": ["*"],
            "DefaultWebBluetoothGuardSetting": 2,
            "DefaultWebUsbGuardSetting": 2
          }
          EOF
          # Set Chrome flags for system-wide use
          echo '--disable-sync --disable-extensions --disable-background-networking --disable-component-update --disable-client-side-phishing-detection --disable-default-apps --disable-translate --disable-background-timer-throttling --disable-backgrounding-occluded-windows --disable-features=TranslateUI --disable-ipc-flooding-protection --no-first-run --disable-crash-reporter --disable-notifications --mute-audio --no-default-browser-check --no-pings --disable-domain-reliability --disable-features=AutofillServerCommunication --disable-site-isolation-trials --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --enable-automation --headless=new --no-service-autorun --password-store=basic --test-type=webdriver --use-mock-keychain --no-sandbox' > ~/.config/google-chrome/chrome_flags.conf

